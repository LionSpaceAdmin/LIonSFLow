import type { NodeDefinition } from './types/nodes';
import {
  Send,
  AtSign,
  Instagram,
  MessageSquare,
  Clock,
  BrainCircuit,
  Image,
  Languages,
  Smile,
  Tags,
  Filter,
  ShieldCheck,
  Twitter,
  FileEdit,
} from 'lucide-react';

export const AllNodeDefinitions: NodeDefinition[] = [
  // Triggers
  {
    id: 'new-telegram-message',
    type: 'new-telegram-message',
    name: 'New Telegram Message',
    category: 'Triggers',
    icon: Send,
    description: 'Starts the flow when a new message appears in a specific Telegram channel or group.',
    inputs: [],
    outputs: [{ name: 'message', label: 'Message' }],
    parameters: [
      { name: 'channelId', label: 'Channel/Group ID', type: 'string', description: 'The ID of the Telegram channel or group to monitor.' },
    ],
  },
  {
    id: 'new-twitter-mention',
    type: 'new-twitter-mention',
    name: 'New X (Twitter) Mention',
    category: 'Triggers',
    icon: AtSign,
    description: 'Starts when your X (Twitter) handle is mentioned in a tweet.',
    inputs: [],
    outputs: [{ name: 'tweet', label: 'Tweet' }],
    parameters: [
       { name: 'handle', label: 'X Handle', type: 'string', description: 'Your X handle (e.g., @username).' },
    ],
  },
  {
    id: 'new-instagram-post',
    type: 'new-instagram-post',
    name: 'New Instagram Post',
    category: 'Triggers',
    icon: Instagram,
    description: 'Starts when you post new media to your Instagram account.',
    inputs: [],
    outputs: [{ name: 'post', label: 'Post' }],
    parameters: [],
  },
  {
    id: 'new-discord-message',
    type: 'new-discord-message',
    name: 'New Discord Message',
    category: 'Triggers',
    icon: MessageSquare,
    description: 'Listens to a specific channel in a Discord server.',
    inputs: [],
    outputs: [{ name: 'message', label: 'Message' }],
    parameters: [
      { name: 'serverId', label: 'Server ID', type: 'string' },
      { name: 'channelId', label: 'Channel ID', type: 'string' },
    ],
  },
  {
    id: 'scheduled-trigger',
    type: 'scheduled-trigger',
    name: 'Scheduled Trigger',
    category: 'Triggers',
    icon: Clock,
    description: 'Runs the flow at a specific time or interval (e.g., every day at 9 AM).',
    inputs: [],
    outputs: [{ name: 'timestamp', label: 'Timestamp' }],
    parameters: [
      { name: 'cron', label: 'Cron Expression', type: 'string', defaultValue: '0 9 * * *' },
    ],
  },
  
  // AI & Generative
  {
    id: 'chat-with-gemini',
    type: 'chat-with-gemini',
    name: 'Chat with Gemini',
    category: 'AI & Generative',
    icon: BrainCircuit,
    description: 'Use Google Gemini for advanced reasoning, text generation, and summarization.',
    inputs: [{ name: 'prompt', label: 'Prompt' }],
    outputs: [{ name: 'result', label: 'Result' }],
    parameters: [
      { name: 'model', label: 'Model', type: 'select', defaultValue: 'gemini-2.5-flash', options: [{value: 'gemini-2.5-flash', label: 'Gemini 2.5 Flash'}]},
      { name: 'prompt', label: 'System Prompt', type: 'textarea', description: 'Instructions for the AI to follow.' },
    ],
  },
  {
    id: 'generate-image',
    type: 'generate-image',
    name: 'Generate Image (Imagen)',
    category: 'AI & Generative',
    icon: Image,
    description: 'Creates an image from a text prompt using Google\'s Imagen 2.',
    inputs: [{ name: 'prompt', label: 'Prompt' }],
    outputs: [{ name: 'imageUrl', label: 'Image URL' }],
    parameters: [],
  },
  
  // Processing
  {
    id: 'translate-text',
    type: 'translate-text',
    name: 'Translate Text',
    category: 'Processing',
    icon: Languages,
    description: 'Translates text from one language to another.',
    inputs: [{ name: 'text', label: 'Text' }],
    outputs: [{ name: 'translatedText', label: 'Translated Text' }],
    parameters: [
      { name: 'targetLanguage', label: 'Target Language', type: 'string', defaultValue: 'en', description: 'e.g., "en" for English, "es" for Spanish' },
    ],
  },
  {
    id: 'analyze-sentiment',
    type: 'analyze-sentiment',
    name: 'Analyze Sentiment',
    category: 'Processing',
    icon: Smile,
    description: 'Determines if text is positive, negative, or neutral.',
    inputs: [{ name: 'text', label: 'Text' }],
    outputs: [{ name: 'sentiment', label: 'Sentiment' }],
    parameters: [],
  },
  {
    id: 'extract-entities',
    type: 'extract-entities',
    name: 'Extract Entities',
    category: 'Processing',
    icon: Tags,
    description: 'Pulls out names, links, hashtags, etc., from a block of text.',
    inputs: [{ name: 'text', label: 'Text' }],
    outputs: [{ name: 'entities', label: 'Entities' }],
    parameters: [],
  },

  // Logic
  {
    id: 'filter',
    type: 'filter',
    name: 'Filter',
    category: 'Logic',
    icon: Filter,
    description: 'Continues the flow only if certain conditions are met.',
    inputs: [{ name: 'input', label: 'Input' }],
    outputs: [{ name: 'passed', label: 'Passed' }],
    parameters: [
      { name: 'condition', label: 'Condition', type: 'string', description: 'e.g., input.includes("important")' },
    ],
  },
  {
    id: 'send-for-moderation',
    type: 'send-for-moderation',
    name: 'Send for Moderation',
    category: 'Logic',
    icon: ShieldCheck,
    description: 'Pauses the flow and places content in a queue for manual approval.',
    inputs: [{ name: 'content', label: 'Content' }],
    outputs: [{ name: 'approvedContent', label: 'Approved Content' }],
    parameters: [],
  },
  
  // Actions
  {
    id: 'publish-to-telegram',
    type: 'publish-to-telegram',
    name: 'Publish to Telegram',
    category: 'Actions',
    icon: Send,
    description: 'Sends a message to a Telegram channel or group.',
    inputs: [{ name: 'message', label: 'Message' }],
    outputs: [],
    parameters: [
      { name: 'channelId', label: 'Channel/Group ID', type: 'string' },
    ],
  },
  {
    id: 'post-to-twitter',
    type: 'post-to-twitter',
    name: 'Post to X (Twitter)',
    category: 'Actions',
    icon: Twitter,
    description: 'Posts a tweet or a reply.',
    inputs: [{ name: 'text', label: 'Text' }],
    outputs: [],
    parameters: [
      { name: 'replyToId', label: 'Reply to Tweet ID (optional)', type: 'string' },
    ],
  },
  {
    id: 'post-to-discord',
    type: 'post-to-discord',
    name: 'Post to Discord',
    category: 'Actions',
    icon: MessageSquare,
    description: 'Sends a message to a Discord channel.',
    inputs: [{ name: 'message', label: 'Message' }],
    outputs: [],
    parameters: [
      { name: 'channelId', label: 'Channel ID', type: 'string' },
    ],
  },
  {
    id: 'update-instagram-caption',
    type: 'update-instagram-caption',
    name: 'Update Instagram Caption',
    category: 'Actions',
    icon: FileEdit,
    description: 'Modifies the caption of an existing Instagram post.',
    inputs: [
        { name: 'postId', label: 'Post ID' },
        { name: 'newCaption', label: 'New Caption' }
    ],
    outputs: [],
    parameters: [],
  },
];
