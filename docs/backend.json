{
  "entities": {
    "Workflow": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Workflow",
      "type": "object",
      "description": "Represents an automation workflow created in the application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the workflow."
        },
        "name": {
          "type": "string",
          "description": "Name of the workflow."
        },
        "description": {
          "type": "string",
          "description": "Description of the workflow."
        },
        "nodes": {
          "type": "string",
          "description": "JSON string representing the nodes of the workflow."
        },
        "edges": {
          "type": "string",
          "description": "JSON string representing the edges of the workflow."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the workflow was created.",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "description": "Timestamp indicating when the workflow was last modified.",
          "format": "date-time"
        },
        "version": {
          "type": "number",
          "description": "Version number of the workflow."
        }
      },
      "required": [
        "id",
        "name",
        "nodes",
        "edges",
        "createdAt",
        "lastModified",
        "version"
      ]
    },
    "NodeDefinition": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "NodeDefinition",
      "type": "object",
      "description": "Represents the definition of a node type available in the application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the node definition."
        },
        "type": {
          "type": "string",
          "description": "Type of the node (e.g., 'New Telegram Message', 'Chat with Gemini')."
        },
        "name": {
          "type": "string",
          "description": "Name of the node."
        },
        "category": {
          "type": "string",
          "description": "Category of the node (e.g., 'Triggers', 'Actions', 'AI & Generative')."
        },
        "icon": {
          "type": "string",
          "description": "Icon name for the node from the lucide-react library."
        },
        "inputs": {
          "type": "string",
          "description": "JSON string representing the inputs of the node."
        },
        "outputs": {
          "type": "string",
          "description": "JSON string representing the outputs of the node."
        }
      },
      "required": [
        "id",
        "type",
        "name",
        "category",
        "icon",
        "inputs",
        "outputs"
      ]
    }
  },
  "auth": {
    "providers": []
  },
  "firestore": {
    "structure": [
      {
        "path": "/workflows/{workflowId}",
        "definition": {
          "entityName": "Workflow",
          "schema": {
            "$ref": "#/backend/entities/Workflow"
          },
          "description": "Stores all workflows for the application in a global collection.",
          "params": [
            {
              "name": "workflowId",
              "description": "The unique identifier for the workflow."
            }
          ]
        }
      },
      {
        "path": "/node_definitions/{nodeDefinitionId}",
        "definition": {
          "entityName": "NodeDefinition",
          "schema": {
            "$ref": "#/backend/entities/NodeDefinition"
          },
          "description": "Stores definitions of node types available in the application. These are global and not user-specific.",
          "params": [
            {
              "name": "nodeDefinitionId",
              "description": "The unique identifier for the node definition."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is simplified to use global collections, as the multi-user authentication requirement has been removed in favor of a single password for the entire app. Workflows are now stored in a top-level `/workflows` collection. NodeDefinitions remain in a top-level collection as they are global to the application."
  }
}
